# .github/workflows/webpack-build.yml

name: Webpack Build for Chrome Extension

on:
  push:
    branches:
      - main # Trigger on pushes to the main branch
  workflow_dispatch: # Allow manual triggering from the GitHub Actions UI

jobs:
  build:
    runs-on: ubuntu-latest # Use the latest Ubuntu runner

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4 # Action to check out your repository code

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20' # Specify the Node.js version you want to use

      - name: Install Dependencies
        run: npm install # Install all project dependencies from package.json

      - name: Run Webpack Build
        # This assumes you have a "build" script in your package.json
        # (e.g., "scripts": { "build": "webpack --mode production" })
        # If you don't, replace "npm run build" with "npx webpack --mode production"
        run: npm run build

      - name: Upload Built Extension Artifact
        uses: actions/upload-artifact@v4
        with:
          name: chrome-extension-build # Name of the artifact
          path: dist/ # The directory where Webpack outputs your compiled extension
          # Adjust 'dist/' if your webpack output directory is different (e.g., 'build/')
          retention-days: 7 # How long to keep the artifact (optional)

      - name: Display Build Success Message
        run: echo "Webpack build completed successfully and artifact uploaded!"

  release:
    needs: build # This job depends on the 'build' job completing successfully
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v') # Only run if a tag starting with 'v' was pushed
    runs-on: ubuntu-latest

    steps:
      - name: Download Built Extension Artifact
        uses: actions/download-artifact@v4
        with:
          name: chrome-extension-build # Name of the artifact to download
          path: ./release-build/ # Directory to download the artifact into

      - name: Create GitHub Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          files: ./release-build/* # Path to the files you want to attach to the release
          # The '*' will attach all files within the 'release-build' directory.
          # If your extension is a single .zip, you might specify './release-build/my-extension.zip'
          name: Release ${{ github.ref_name }} # Sets the release name (e.g., Release v1.0.0)
          tag_name: ${{ github.ref_name }} # Uses the pushed tag as the release tag
          body: | # Release notes (you can customize this)
            Automated release for version ${{ github.ref_name }}.
            
            This release includes the compiled Chrome extension.
          draft: false # Set to true if you want to create a draft release
          prerelease: false # Set to true for pre-release versions
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # GitHub token for authentication
